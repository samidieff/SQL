In this SQL code, I'm querying a database that's holding Nexflix data to answer questions about the data. 


#1. How many movie titles are there in the database? (movies only, not tv shows) 

SELECT COUNT(*)
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie';


#2. When was the most recent batch of tv shows and/or movies added to the database? 

SELECT date_added, title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
ORDER BY date_added desc;


SELECT MAX(date(date_added))
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info";
SELECT type, title


#3. List all the movies and tv shows in alphabetical order. 

SELECT type, title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type='Movie'
ORDER BY title;


#4. Who was the Director for the movie Bright Star? 

SELECT
director
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" nt
LEFT JOIN "CharlotteChaze/BreakIntoTech"."netflix_people" np
ON nt.show_id=np.show_id
WHERE nt.title='Bright Star';

SELECT 
np.show_id,
np.director,
nt.title
FROM "CharlotteChaze/BreakIntoTech"."netflix_people" np
LEFT JOIN "CharlotteChaze/BreakIntoTech"."netflix_titles_info" nt
ON np.show_id=nt.show_id
WHERE nt.title='Bright Star';


#5. What is the oldest movie in the database and what year was it made? 

SELECT
title
release_year
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
WHERE type='Movie'
ORDER BY release_year asc
LIMIT 1;


SELECT title, release_year
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
WHERE type='Movie'
AND release_year <= 
(SELECT MIN(release_year) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'); 


#6. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product;


#7. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 

SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%'
AND length(orderid) = 6
AND orderid <> 3
GROUP BY location
HAVING COUNT(orderID)>2;


#8. How many of each type of headphone were sold in February?

SELECT product, SUM(quantity) as quantity
FROM BIT_DB.FebSales
WHERE product like '%headphone%'
GROUP BY product;


#9. What was the average amount spent per account in February? 

SELECT AVG(quantity*price)
FROM BIT_DB.FebSales feb
LEFT JOIN customers cus
ON cus.order_id = feb.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


#10. What was the average quantity of products purchased per account in February? 

SELECT SUM(quantity)/COUNT(cus.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN customers cus
ON cus.order_id = feb.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


#11. Which product brought in the most revenue in January and how much revenue did it bring in total? 

SELECT product, SUM(quantity)*price
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1;



