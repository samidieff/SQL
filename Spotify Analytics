For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL. 



---Creating the table: 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)


---Then I inserted the Spotify Data .csv into the table.

   Next, I explored the data using the following SQL. 


---I determined who the top 10 artists are by popularity.

SELECT artist_name, popularity
FROM Spotifydata
WHERE popularity >= 85
ORDER BY popularity desc
LIMIT 10;


---I determined who the bottom 10 artists are by popularity.

SELECT artist_name, popularity
FROM spotifydata
WHERE popularity <= 90
ORDER BY popularity asc
LIMIT 10;


---I determined which artist has the loudest song, then listed the top 10 loudest songs.

SELECT artist_name, MAX(loudness)
FROM spotifydata
GROUP BY loudness
LIMIT 1;

SELECT artist_name, track_name, loudness
FROM spotifydata
ORDER BY loudness asc
LIMIT 10;


---Determined the number of songs each artist has on the list. 

SELECT artist_name, COUNT(*)
FROM spotifydata
GROUP BY artist_name
ORDER BY COUNT(*) desc;


---Determined which artist released the longest song.

SELECT artist_name, track_name, MAX(duration_ms) as duration
FROM spotifydata;


---Determined the average danceability by artist and track.

SELECT artist_name, track_name, avg(danceability)
FROM spotifydata
GROUP BY artist_name, track_name;


---Determined the average danceability, energy, popularity by artist and track.

SELECT artist_name, track_name, avg(danceability), avg(energy), avg(popularity)
FROM spotifydata
GROUP BY artist_name, track_name;


---Determined the top 10 songs by liveness.

SELECT artist_name, track_name, liveness
FROM spotifydata
ORDER BY liveness desc
LIMIT 10;


---Determined the average speechiness of the top 10 most popular songs,

SELECT avg(speechiness)
FROM spotifydata
WHERE popularity >= 85
ORDER BY avg(speechiness);


